{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { Pipe, forwardRef, EventEmitter, ChangeDetectorRef, Input, Output, HostListener, Component, ChangeDetectionStrategy, ElementRef, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nclass ListItem {\n  constructor(source) {\n    if (typeof source === 'string' || typeof source === 'number') {\n      this.id = this.text = source;\n      this.isDisabled = false;\n    }\n\n    if (typeof source === 'object') {\n      this.id = source.id;\n      this.text = source.text;\n      this.tooltip = source.tooltip;\n      this.isDisabled = source.isDisabled;\n    }\n  }\n\n}\n\nlet ListFilterPipe = class ListFilterPipe {\n  transform(items, filter) {\n    if (!items || !filter) {\n      return items;\n    }\n\n    return items.filter(item => this.applyFilter(item, filter));\n  }\n\n  applyFilter(item, filter) {\n    if (typeof item.text === 'string' && typeof filter.text === 'string') {\n      return !(filter.text && item.text && item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1);\n    } else {\n      return !(filter.text && item.text && item.text.toString().toLowerCase().indexOf(filter.text.toString().toLowerCase()) === -1);\n    }\n  }\n\n};\nListFilterPipe = __decorate([Pipe({\n  name: 'multiSelectFilter',\n  pure: false\n})], ListFilterPipe);\nconst DROPDOWN_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MultiSelectComponent),\n  multi: true\n};\n\nconst noop = () => {};\n\nconst Éµ0 = noop;\nlet MultiSelectComponent = class MultiSelectComponent {\n  constructor(listFilterPipe, cdr) {\n    this.listFilterPipe = listFilterPipe;\n    this.cdr = cdr;\n    this._data = [];\n    this.selectedItems = [];\n    this.isDropdownOpen = true;\n    this._placeholder = \"Select\";\n    this._sourceDataType = null; // to keep note of the source data type. could be array of string/number/object\n\n    this._sourceDataFields = []; // store source data fields names\n\n    this.filter = new ListItem(this.data);\n    this.defaultSettings = {\n      singleSelection: false,\n      idField: \"id\",\n      textField: \"text\",\n      tooltipField: \"tooltip\",\n      disabledField: \"isDisabled\",\n      enableCheckAll: true,\n      selectAllText: \"Select All\",\n      unSelectAllText: \"UnSelect All\",\n      allowSearchFilter: false,\n      limitSelection: -1,\n      clearSearchFilter: true,\n      maxHeight: 197,\n      itemsShowLimit: 999999999999,\n      searchPlaceholderText: \"Search\",\n      noDataAvailablePlaceholderText: \"No data available\",\n      noFilteredDataAvailablePlaceholderText: \"No filtered data available\",\n      closeDropDownOnSelection: false,\n      showSelectedItemsAtTop: false,\n      defaultOpen: false,\n      allowRemoteDataSearch: false\n    };\n    this.disabled = false;\n    this.onFilterChange = new EventEmitter();\n    this.onDropDownClose = new EventEmitter();\n    this.onSelect = new EventEmitter();\n    this.onDeSelect = new EventEmitter();\n    this.onSelectAll = new EventEmitter();\n    this.onDeSelectAll = new EventEmitter();\n    this.onTouchedCallback = noop;\n    this.onChangeCallback = noop;\n  }\n\n  set placeholder(value) {\n    if (value) {\n      this._placeholder = value;\n    } else {\n      this._placeholder = \"Select\";\n    }\n  }\n\n  set settings(value) {\n    if (value) {\n      this._settings = Object.assign(this.defaultSettings, value);\n    } else {\n      this._settings = Object.assign(this.defaultSettings);\n    }\n  }\n\n  set data(value) {\n    if (!value) {\n      this._data = [];\n    } else {\n      const firstItem = value[0];\n      this._sourceDataType = typeof firstItem;\n      this._sourceDataFields = this.getFields(firstItem);\n      this._data = value.map(item => this.deobjectify(item));\n    }\n  }\n\n  onFilterTextChange($event) {\n    this.onFilterChange.emit($event);\n  }\n\n  onItemClick($event, item) {\n    if (this.disabled || item.isDisabled) {\n      return false;\n    }\n\n    const found = this.isSelected(item);\n    const allowAdd = this._settings.limitSelection === -1 || this._settings.limitSelection > 0 && this.selectedItems.length < this._settings.limitSelection;\n\n    if (!found) {\n      if (allowAdd) {\n        this.addSelected(item);\n      }\n    } else {\n      this.removeSelected(item);\n    }\n\n    if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\n      this.closeDropdown();\n    }\n  }\n\n  writeValue(value) {\n    if (value !== undefined && value !== null && value.length > 0) {\n      if (this._settings.singleSelection) {\n        try {\n          if (value.length >= 1) {\n            this.selectedItems = [this.deobjectify(value[0])];\n          }\n        } catch (e) {// console.error(e.body.msg);\n        }\n      } else {\n        const _data = value.map(item => this.deobjectify(item));\n\n        if (this._settings.limitSelection > 0) {\n          this.selectedItems = _data.splice(0, this._settings.limitSelection);\n        } else {\n          this.selectedItems = _data;\n        }\n      }\n    } else {\n      this.selectedItems = [];\n    }\n\n    this.onChangeCallback(value);\n    this.cdr.markForCheck();\n  } // From ControlValueAccessor interface\n\n\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  } // From ControlValueAccessor interface\n\n\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  } // Set touched on blur\n\n\n  onTouched() {\n    // this.closeDropdown();\n    this.onTouchedCallback();\n  }\n\n  trackByFn(index, item) {\n    return item.id;\n  }\n\n  isSelected(clickedItem) {\n    let found = false;\n    this.selectedItems.forEach(item => {\n      if (clickedItem.id === item.id) {\n        found = true;\n      }\n    });\n    return found;\n  }\n\n  isLimitSelectionReached() {\n    return this._settings.limitSelection === this.selectedItems.length;\n  }\n\n  isAllItemsSelected() {\n    // get disabld item count\n    let filteredItems = this.listFilterPipe.transform(this._data, this.filter);\n    const itemDisabledCount = filteredItems.filter(item => item.isDisabled).length; // take disabled items into consideration when checking\n\n    if ((!this.data || this.data.length === 0) && this._settings.allowRemoteDataSearch) {\n      return false;\n    }\n\n    return filteredItems.length === this.selectedItems.length + itemDisabledCount;\n  }\n\n  showButton() {\n    if (!this._settings.singleSelection) {\n      if (this._settings.limitSelection > 0) {\n        return false;\n      } // this._settings.enableCheckAll = this._settings.limitSelection === -1 ? true : false;\n\n\n      return true; // !this._settings.singleSelection && this._settings.enableCheckAll && this._data.length > 0;\n    } else {\n      // should be disabled in single selection mode\n      return false;\n    }\n  }\n\n  itemShowRemaining() {\n    return this.selectedItems.length - this._settings.itemsShowLimit;\n  }\n\n  addSelected(item) {\n    if (this._settings.singleSelection) {\n      this.selectedItems = [];\n      this.selectedItems.push(item);\n    } else {\n      this.selectedItems.push(item);\n    }\n\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n    this.onSelect.emit(this.emittedValue(item));\n  }\n\n  removeSelected(itemSel) {\n    this.selectedItems.forEach(item => {\n      if (itemSel.id === item.id) {\n        this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n      }\n    });\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n    this.onDeSelect.emit(this.emittedValue(itemSel));\n  }\n\n  emittedValue(val) {\n    const selected = [];\n\n    if (Array.isArray(val)) {\n      val.map(item => {\n        selected.push(this.objectify(item));\n      });\n    } else {\n      if (val) {\n        return this.objectify(val);\n      }\n    }\n\n    return selected;\n  }\n\n  objectify(val) {\n    if (this._sourceDataType === 'object') {\n      const obj = {};\n      obj[this._settings.idField] = val.id;\n      obj[this._settings.textField] = val.text;\n\n      if (this._sourceDataFields.includes(this._settings.disabledField)) {\n        obj[this._settings.disabledField] = val.isDisabled;\n      }\n\n      if (this._sourceDataFields.includes(this._settings.tooltipField)) {\n        obj[this._settings.tooltipField] = val.tooltip;\n      }\n\n      return obj;\n    }\n\n    if (this._sourceDataType === 'number') {\n      return Number(val.id);\n    } else {\n      return val.text;\n    }\n  }\n\n  deobjectify(item) {\n    if (typeof item === \"string\" || typeof item === \"number\") {\n      return new ListItem(item);\n    } else {\n      return new ListItem({\n        id: item[this._settings.idField],\n        text: item[this._settings.textField],\n        tooltip: item[this._settings.tooltipField],\n        isDisabled: item[this._settings.disabledField]\n      });\n    }\n  }\n\n  toggleDropdown(evt) {\n    evt.preventDefault();\n\n    if (this.disabled && this._settings.singleSelection) {\n      return;\n    }\n\n    this._settings.defaultOpen = !this._settings.defaultOpen;\n\n    if (!this._settings.defaultOpen) {\n      this.onDropDownClose.emit();\n    }\n  }\n\n  closeDropdown() {\n    this._settings.defaultOpen = false; // clear search text\n\n    if (this._settings.clearSearchFilter) {\n      this.filter.text = \"\";\n    }\n\n    this.onDropDownClose.emit();\n  }\n\n  toggleSelectAll() {\n    if (this.disabled) {\n      return false;\n    }\n\n    if (!this.isAllItemsSelected()) {\n      // filter out disabled item first before slicing\n      this.selectedItems = this.listFilterPipe.transform(this._data, this.filter).filter(item => !item.isDisabled).slice();\n      this.onSelectAll.emit(this.emittedValue(this.selectedItems));\n    } else {\n      this.selectedItems = [];\n      this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\n    }\n\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n  }\n\n  getFields(inputData) {\n    const fields = [];\n\n    if (typeof inputData !== \"object\") {\n      return fields;\n    } // tslint:disable-next-line:forin\n\n\n    for (const prop in inputData) {\n      fields.push(prop);\n    }\n\n    return fields;\n  }\n\n};\n\nMultiSelectComponent.ctorParameters = () => [{\n  type: ListFilterPipe\n}, {\n  type: ChangeDetectorRef\n}];\n\n__decorate([Input()], MultiSelectComponent.prototype, \"placeholder\", null);\n\n__decorate([Input()], MultiSelectComponent.prototype, \"disabled\", void 0);\n\n__decorate([Input()], MultiSelectComponent.prototype, \"settings\", null);\n\n__decorate([Input()], MultiSelectComponent.prototype, \"data\", null);\n\n__decorate([Output(\"onFilterChange\")], MultiSelectComponent.prototype, \"onFilterChange\", void 0);\n\n__decorate([Output(\"onDropDownClose\")], MultiSelectComponent.prototype, \"onDropDownClose\", void 0);\n\n__decorate([Output(\"onSelect\")], MultiSelectComponent.prototype, \"onSelect\", void 0);\n\n__decorate([Output(\"onDeSelect\")], MultiSelectComponent.prototype, \"onDeSelect\", void 0);\n\n__decorate([Output(\"onSelectAll\")], MultiSelectComponent.prototype, \"onSelectAll\", void 0);\n\n__decorate([Output(\"onDeSelectAll\")], MultiSelectComponent.prototype, \"onDeSelectAll\", void 0);\n\n__decorate([HostListener(\"blur\")], MultiSelectComponent.prototype, \"onTouched\", null);\n\nMultiSelectComponent = __decorate([Component({\n  selector: \"ng-multiselect-dropdown\",\n  template: \"<div tabindex=\\\"0\\\" (blur)=\\\"onTouched()\\\" class=\\\"multiselect-dropdown\\\" (clickOutside)=\\\"closeDropdown()\\\">\\n  <div [class.disabled]=\\\"disabled\\\">\\n    <span tabindex=\\\"-1\\\" class=\\\"dropdown-btn\\\" (click)=\\\"toggleDropdown($event)\\\">\\n      <span *ngIf=\\\"selectedItems.length == 0\\\">{{_placeholder}}</span>\\n      <span *ngFor=\\\"let item of selectedItems; trackBy: trackByFn;let k = index\\\" class=\\\"selected-item-container\\\" >\\n        <span class=\\\"selected-item\\\"  [hidden]=\\\"k  > (this._settings.itemsShowLimit-1)\\\" [attr.title]=\\\"item.tooltip\\\">\\n          <span >{{item.text}}&nbsp;</span>\\n          <a style=\\\"padding-left:2px;color:white\\\" (click)=\\\"onItemClick($event,item)\\\">x</a>\\n        </span>\\n\\n      </span>\\n      <span [ngClass]=\\\"{ 'dropdown-multiselect--active': _settings.defaultOpen }\\\" style=\\\"float:right !important;padding-right:4px\\\">\\n        <span style=\\\"padding-right: 15px;\\\" *ngIf=\\\"itemShowRemaining()>0\\\">+{{itemShowRemaining()}}</span>\\n        <span class=\\\"dropdown-multiselect__caret\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n  <div class=\\\"dropdown-list\\\" [hidden]=\\\"!_settings.defaultOpen\\\">\\n    <ul class=\\\"item1\\\">\\n      <li (click)=\\\"toggleSelectAll()\\\" *ngIf=\\\"(_data.length > 0 || _settings.allowRemoteDataSearch) && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1\\\" class=\\\"multiselect-item-checkbox\\\" style=\\\"border-bottom: 1px solid #ccc;padding:10px\\\">\\n        <input type=\\\"checkbox\\\" aria-label=\\\"multiselect-select-all\\\" [checked]=\\\"isAllItemsSelected()\\\" [disabled]=\\\"disabled || isLimitSelectionReached()\\\" />\\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\\n      </li>\\n      <li class=\\\"filter-textbox\\\" *ngIf=\\\"(_data.length>0 || _settings.allowRemoteDataSearch) && _settings.allowSearchFilter\\\">\\n        <input type=\\\"text\\\" aria-label=\\\"multiselect-search\\\" [readOnly]=\\\"disabled\\\" [placeholder]=\\\"_settings.searchPlaceholderText\\\" [(ngModel)]=\\\"filter.text\\\" (ngModelChange)=\\\"onFilterTextChange($event)\\\">\\n      </li>\\n    </ul>\\n    <ul class=\\\"item2\\\" [style.maxHeight]=\\\"_settings.maxHeight+'px'\\\">\\n      <li *ngFor=\\\"let item of _data | multiSelectFilter:filter; let i = index;\\\" (click)=\\\"onItemClick($event,item)\\\" class=\\\"multiselect-item-checkbox\\\" [attr.title]=\\\"item.tooltip\\\">\\n        <input type=\\\"checkbox\\\" [attr.aria-label]=\\\"item.text\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"disabled || (isLimitSelectionReached() && !isSelected(item)) || item.isDisabled\\\" />\\n        <div>{{item.text}}</div>\\n      </li>\\n      <li class='no-filtered-data' *ngIf=\\\"_data.length != 0 && (_data | multiSelectFilter:filter).length == 0 && !_settings.allowRemoteDataSearch\\\">\\n        <h5>{{_settings.noFilteredDataAvailablePlaceholderText}}</h5>\\n      </li>\\n      <li class='no-data' *ngIf=\\\"_data.length == 0 && !_settings.allowRemoteDataSearch\\\">\\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\",\n  providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\".multiselect-dropdown{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item-container{display:flex;float:left;max-width:93%}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item{border:1px solid #337ab7;margin-right:4px;margin-bottom:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item span{overflow:hidden;text-overflow:ellipsis}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret{line-height:16px;display:block;position:absolute;box-sizing:border-box;width:40px;height:38px;right:1px;top:0;padding:4px 8px;margin:0;text-decoration:none;text-align:center;cursor:pointer;transition:transform .2s}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:8px 8px 0;border-color:#999 transparent;content:\\\"\\\"}.multiselect-dropdown .dropdown-btn .dropdown-multiselect--active .dropdown-multiselect__caret{transform:rotateZ(180deg)}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox:hover{background-color:#e4e3e3}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:\\\"\\\";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:\\\"\\\";position:absolute;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:\\\"\\\";transition:transform .2s ease-out;transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}\"]\n})], MultiSelectComponent);\nlet ClickOutsideDirective = class ClickOutsideDirective {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n    this.clickOutside = new EventEmitter();\n  }\n\n  onClick(event, targetElement) {\n    if (!targetElement) {\n      return;\n    }\n\n    const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n\n    if (!clickedInside) {\n      this.clickOutside.emit(event);\n    }\n  }\n\n};\n\nClickOutsideDirective.ctorParameters = () => [{\n  type: ElementRef\n}];\n\n__decorate([Output()], ClickOutsideDirective.prototype, \"clickOutside\", void 0);\n\n__decorate([HostListener('document:click', ['$event', '$event.target'])], ClickOutsideDirective.prototype, \"onClick\", null);\n\nClickOutsideDirective = __decorate([Directive({\n  selector: '[clickOutside]'\n})], ClickOutsideDirective);\nvar NgMultiSelectDropDownModule_1;\nlet NgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = class NgMultiSelectDropDownModule {\n  static forRoot() {\n    return {\n      ngModule: NgMultiSelectDropDownModule_1\n    };\n  }\n\n};\nNgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = __decorate([NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [MultiSelectComponent, ClickOutsideDirective, ListFilterPipe],\n  providers: [ListFilterPipe],\n  exports: [MultiSelectComponent]\n})], NgMultiSelectDropDownModule);\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MultiSelectComponent, NgMultiSelectDropDownModule, DROPDOWN_CONTROL_VALUE_ACCESSOR as Éµa, ListFilterPipe as Éµb, ClickOutsideDirective as Éµc };","map":{"version":3,"names":["__decorate","Pipe","forwardRef","EventEmitter","ChangeDetectorRef","Input","Output","HostListener","Component","ChangeDetectionStrategy","ElementRef","Directive","NgModule","NG_VALUE_ACCESSOR","FormsModule","CommonModule","ListItem","constructor","source","id","text","isDisabled","tooltip","ListFilterPipe","transform","items","filter","item","applyFilter","toLowerCase","indexOf","toString","name","pure","DROPDOWN_CONTROL_VALUE_ACCESSOR","provide","useExisting","MultiSelectComponent","multi","noop","Éµ0","listFilterPipe","cdr","_data","selectedItems","isDropdownOpen","_placeholder","_sourceDataType","_sourceDataFields","data","defaultSettings","singleSelection","idField","textField","tooltipField","disabledField","enableCheckAll","selectAllText","unSelectAllText","allowSearchFilter","limitSelection","clearSearchFilter","maxHeight","itemsShowLimit","searchPlaceholderText","noDataAvailablePlaceholderText","noFilteredDataAvailablePlaceholderText","closeDropDownOnSelection","showSelectedItemsAtTop","defaultOpen","allowRemoteDataSearch","disabled","onFilterChange","onDropDownClose","onSelect","onDeSelect","onSelectAll","onDeSelectAll","onTouchedCallback","onChangeCallback","placeholder","value","settings","_settings","Object","assign","firstItem","getFields","map","deobjectify","onFilterTextChange","$event","emit","onItemClick","found","isSelected","allowAdd","length","addSelected","removeSelected","closeDropdown","writeValue","undefined","e","splice","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","trackByFn","index","clickedItem","forEach","isLimitSelectionReached","isAllItemsSelected","filteredItems","itemDisabledCount","showButton","itemShowRemaining","push","emittedValue","itemSel","val","selected","Array","isArray","objectify","obj","includes","Number","toggleDropdown","evt","preventDefault","toggleSelectAll","slice","inputData","fields","prop","ctorParameters","type","prototype","selector","template","providers","changeDetection","OnPush","styles","ClickOutsideDirective","_elementRef","clickOutside","onClick","event","targetElement","clickedInside","nativeElement","contains","NgMultiSelectDropDownModule_1","NgMultiSelectDropDownModule","forRoot","ngModule","imports","declarations","exports","Éµa","Éµb","Éµc"],"sources":["C:/Users/mhemo/OneDrive/Desktop/System Development Final Project/Frontend/mainSystem/node_modules/ng-multiselect-dropdown/fesm2015/ng-multiselect-dropdown.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport { Pipe, forwardRef, EventEmitter, ChangeDetectorRef, Input, Output, HostListener, Component, ChangeDetectionStrategy, ElementRef, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nclass ListItem {\n    constructor(source) {\n        if (typeof source === 'string' || typeof source === 'number') {\n            this.id = this.text = source;\n            this.isDisabled = false;\n        }\n        if (typeof source === 'object') {\n            this.id = source.id;\n            this.text = source.text;\n            this.tooltip = source.tooltip;\n            this.isDisabled = source.isDisabled;\n        }\n    }\n}\n\nlet ListFilterPipe = class ListFilterPipe {\n    transform(items, filter) {\n        if (!items || !filter) {\n            return items;\n        }\n        return items.filter((item) => this.applyFilter(item, filter));\n    }\n    applyFilter(item, filter) {\n        if (typeof item.text === 'string' && typeof filter.text === 'string') {\n            return !(filter.text && item.text && item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1);\n        }\n        else {\n            return !(filter.text && item.text && item.text.toString().toLowerCase().indexOf(filter.text.toString().toLowerCase()) === -1);\n        }\n    }\n};\nListFilterPipe = __decorate([\n    Pipe({\n        name: 'multiSelectFilter',\n        pure: false\n    })\n], ListFilterPipe);\n\nconst DROPDOWN_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectComponent),\n    multi: true\n};\nconst noop = () => { };\nconst Éµ0 = noop;\nlet MultiSelectComponent = class MultiSelectComponent {\n    constructor(listFilterPipe, cdr) {\n        this.listFilterPipe = listFilterPipe;\n        this.cdr = cdr;\n        this._data = [];\n        this.selectedItems = [];\n        this.isDropdownOpen = true;\n        this._placeholder = \"Select\";\n        this._sourceDataType = null; // to keep note of the source data type. could be array of string/number/object\n        this._sourceDataFields = []; // store source data fields names\n        this.filter = new ListItem(this.data);\n        this.defaultSettings = {\n            singleSelection: false,\n            idField: \"id\",\n            textField: \"text\",\n            tooltipField: \"tooltip\",\n            disabledField: \"isDisabled\",\n            enableCheckAll: true,\n            selectAllText: \"Select All\",\n            unSelectAllText: \"UnSelect All\",\n            allowSearchFilter: false,\n            limitSelection: -1,\n            clearSearchFilter: true,\n            maxHeight: 197,\n            itemsShowLimit: 999999999999,\n            searchPlaceholderText: \"Search\",\n            noDataAvailablePlaceholderText: \"No data available\",\n            noFilteredDataAvailablePlaceholderText: \"No filtered data available\",\n            closeDropDownOnSelection: false,\n            showSelectedItemsAtTop: false,\n            defaultOpen: false,\n            allowRemoteDataSearch: false\n        };\n        this.disabled = false;\n        this.onFilterChange = new EventEmitter();\n        this.onDropDownClose = new EventEmitter();\n        this.onSelect = new EventEmitter();\n        this.onDeSelect = new EventEmitter();\n        this.onSelectAll = new EventEmitter();\n        this.onDeSelectAll = new EventEmitter();\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n    }\n    set placeholder(value) {\n        if (value) {\n            this._placeholder = value;\n        }\n        else {\n            this._placeholder = \"Select\";\n        }\n    }\n    set settings(value) {\n        if (value) {\n            this._settings = Object.assign(this.defaultSettings, value);\n        }\n        else {\n            this._settings = Object.assign(this.defaultSettings);\n        }\n    }\n    set data(value) {\n        if (!value) {\n            this._data = [];\n        }\n        else {\n            const firstItem = value[0];\n            this._sourceDataType = typeof firstItem;\n            this._sourceDataFields = this.getFields(firstItem);\n            this._data = value.map(item => this.deobjectify(item));\n        }\n    }\n    onFilterTextChange($event) {\n        this.onFilterChange.emit($event);\n    }\n    onItemClick($event, item) {\n        if (this.disabled || item.isDisabled) {\n            return false;\n        }\n        const found = this.isSelected(item);\n        const allowAdd = this._settings.limitSelection === -1 || (this._settings.limitSelection > 0 && this.selectedItems.length < this._settings.limitSelection);\n        if (!found) {\n            if (allowAdd) {\n                this.addSelected(item);\n            }\n        }\n        else {\n            this.removeSelected(item);\n        }\n        if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\n            this.closeDropdown();\n        }\n    }\n    writeValue(value) {\n        if (value !== undefined && value !== null && value.length > 0) {\n            if (this._settings.singleSelection) {\n                try {\n                    if (value.length >= 1) {\n                        this.selectedItems = [this.deobjectify(value[0])];\n                    }\n                }\n                catch (e) {\n                    // console.error(e.body.msg);\n                }\n            }\n            else {\n                const _data = value.map((item) => this.deobjectify(item));\n                if (this._settings.limitSelection > 0) {\n                    this.selectedItems = _data.splice(0, this._settings.limitSelection);\n                }\n                else {\n                    this.selectedItems = _data;\n                }\n            }\n        }\n        else {\n            this.selectedItems = [];\n        }\n        this.onChangeCallback(value);\n        this.cdr.markForCheck();\n    }\n    // From ControlValueAccessor interface\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    // From ControlValueAccessor interface\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    // Set touched on blur\n    onTouched() {\n        // this.closeDropdown();\n        this.onTouchedCallback();\n    }\n    trackByFn(index, item) {\n        return item.id;\n    }\n    isSelected(clickedItem) {\n        let found = false;\n        this.selectedItems.forEach(item => {\n            if (clickedItem.id === item.id) {\n                found = true;\n            }\n        });\n        return found;\n    }\n    isLimitSelectionReached() {\n        return this._settings.limitSelection === this.selectedItems.length;\n    }\n    isAllItemsSelected() {\n        // get disabld item count\n        let filteredItems = this.listFilterPipe.transform(this._data, this.filter);\n        const itemDisabledCount = filteredItems.filter(item => item.isDisabled).length;\n        // take disabled items into consideration when checking\n        if ((!this.data || this.data.length === 0) && this._settings.allowRemoteDataSearch) {\n            return false;\n        }\n        return filteredItems.length === this.selectedItems.length + itemDisabledCount;\n    }\n    showButton() {\n        if (!this._settings.singleSelection) {\n            if (this._settings.limitSelection > 0) {\n                return false;\n            }\n            // this._settings.enableCheckAll = this._settings.limitSelection === -1 ? true : false;\n            return true; // !this._settings.singleSelection && this._settings.enableCheckAll && this._data.length > 0;\n        }\n        else {\n            // should be disabled in single selection mode\n            return false;\n        }\n    }\n    itemShowRemaining() {\n        return this.selectedItems.length - this._settings.itemsShowLimit;\n    }\n    addSelected(item) {\n        if (this._settings.singleSelection) {\n            this.selectedItems = [];\n            this.selectedItems.push(item);\n        }\n        else {\n            this.selectedItems.push(item);\n        }\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n        this.onSelect.emit(this.emittedValue(item));\n    }\n    removeSelected(itemSel) {\n        this.selectedItems.forEach(item => {\n            if (itemSel.id === item.id) {\n                this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n            }\n        });\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n        this.onDeSelect.emit(this.emittedValue(itemSel));\n    }\n    emittedValue(val) {\n        const selected = [];\n        if (Array.isArray(val)) {\n            val.map(item => {\n                selected.push(this.objectify(item));\n            });\n        }\n        else {\n            if (val) {\n                return this.objectify(val);\n            }\n        }\n        return selected;\n    }\n    objectify(val) {\n        if (this._sourceDataType === 'object') {\n            const obj = {};\n            obj[this._settings.idField] = val.id;\n            obj[this._settings.textField] = val.text;\n            if (this._sourceDataFields.includes(this._settings.disabledField)) {\n                obj[this._settings.disabledField] = val.isDisabled;\n            }\n            if (this._sourceDataFields.includes(this._settings.tooltipField)) {\n                obj[this._settings.tooltipField] = val.tooltip;\n            }\n            return obj;\n        }\n        if (this._sourceDataType === 'number') {\n            return Number(val.id);\n        }\n        else {\n            return val.text;\n        }\n    }\n    deobjectify(item) {\n        if (typeof item === \"string\" || typeof item === \"number\") {\n            return new ListItem(item);\n        }\n        else {\n            return new ListItem({\n                id: item[this._settings.idField],\n                text: item[this._settings.textField],\n                tooltip: item[this._settings.tooltipField],\n                isDisabled: item[this._settings.disabledField]\n            });\n        }\n    }\n    toggleDropdown(evt) {\n        evt.preventDefault();\n        if (this.disabled && this._settings.singleSelection) {\n            return;\n        }\n        this._settings.defaultOpen = !this._settings.defaultOpen;\n        if (!this._settings.defaultOpen) {\n            this.onDropDownClose.emit();\n        }\n    }\n    closeDropdown() {\n        this._settings.defaultOpen = false;\n        // clear search text\n        if (this._settings.clearSearchFilter) {\n            this.filter.text = \"\";\n        }\n        this.onDropDownClose.emit();\n    }\n    toggleSelectAll() {\n        if (this.disabled) {\n            return false;\n        }\n        if (!this.isAllItemsSelected()) {\n            // filter out disabled item first before slicing\n            this.selectedItems = this.listFilterPipe.transform(this._data, this.filter).filter(item => !item.isDisabled).slice();\n            this.onSelectAll.emit(this.emittedValue(this.selectedItems));\n        }\n        else {\n            this.selectedItems = [];\n            this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\n        }\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n    }\n    getFields(inputData) {\n        const fields = [];\n        if (typeof inputData !== \"object\") {\n            return fields;\n        }\n        // tslint:disable-next-line:forin\n        for (const prop in inputData) {\n            fields.push(prop);\n        }\n        return fields;\n    }\n};\nMultiSelectComponent.ctorParameters = () => [\n    { type: ListFilterPipe },\n    { type: ChangeDetectorRef }\n];\n__decorate([\n    Input()\n], MultiSelectComponent.prototype, \"placeholder\", null);\n__decorate([\n    Input()\n], MultiSelectComponent.prototype, \"disabled\", void 0);\n__decorate([\n    Input()\n], MultiSelectComponent.prototype, \"settings\", null);\n__decorate([\n    Input()\n], MultiSelectComponent.prototype, \"data\", null);\n__decorate([\n    Output(\"onFilterChange\")\n], MultiSelectComponent.prototype, \"onFilterChange\", void 0);\n__decorate([\n    Output(\"onDropDownClose\")\n], MultiSelectComponent.prototype, \"onDropDownClose\", void 0);\n__decorate([\n    Output(\"onSelect\")\n], MultiSelectComponent.prototype, \"onSelect\", void 0);\n__decorate([\n    Output(\"onDeSelect\")\n], MultiSelectComponent.prototype, \"onDeSelect\", void 0);\n__decorate([\n    Output(\"onSelectAll\")\n], MultiSelectComponent.prototype, \"onSelectAll\", void 0);\n__decorate([\n    Output(\"onDeSelectAll\")\n], MultiSelectComponent.prototype, \"onDeSelectAll\", void 0);\n__decorate([\n    HostListener(\"blur\")\n], MultiSelectComponent.prototype, \"onTouched\", null);\nMultiSelectComponent = __decorate([\n    Component({\n        selector: \"ng-multiselect-dropdown\",\n        template: \"<div tabindex=\\\"0\\\" (blur)=\\\"onTouched()\\\" class=\\\"multiselect-dropdown\\\" (clickOutside)=\\\"closeDropdown()\\\">\\n  <div [class.disabled]=\\\"disabled\\\">\\n    <span tabindex=\\\"-1\\\" class=\\\"dropdown-btn\\\" (click)=\\\"toggleDropdown($event)\\\">\\n      <span *ngIf=\\\"selectedItems.length == 0\\\">{{_placeholder}}</span>\\n      <span *ngFor=\\\"let item of selectedItems; trackBy: trackByFn;let k = index\\\" class=\\\"selected-item-container\\\" >\\n        <span class=\\\"selected-item\\\"  [hidden]=\\\"k  > (this._settings.itemsShowLimit-1)\\\" [attr.title]=\\\"item.tooltip\\\">\\n          <span >{{item.text}}&nbsp;</span>\\n          <a style=\\\"padding-left:2px;color:white\\\" (click)=\\\"onItemClick($event,item)\\\">x</a>\\n        </span>\\n\\n      </span>\\n      <span [ngClass]=\\\"{ 'dropdown-multiselect--active': _settings.defaultOpen }\\\" style=\\\"float:right !important;padding-right:4px\\\">\\n        <span style=\\\"padding-right: 15px;\\\" *ngIf=\\\"itemShowRemaining()>0\\\">+{{itemShowRemaining()}}</span>\\n        <span class=\\\"dropdown-multiselect__caret\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n  <div class=\\\"dropdown-list\\\" [hidden]=\\\"!_settings.defaultOpen\\\">\\n    <ul class=\\\"item1\\\">\\n      <li (click)=\\\"toggleSelectAll()\\\" *ngIf=\\\"(_data.length > 0 || _settings.allowRemoteDataSearch) && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1\\\" class=\\\"multiselect-item-checkbox\\\" style=\\\"border-bottom: 1px solid #ccc;padding:10px\\\">\\n        <input type=\\\"checkbox\\\" aria-label=\\\"multiselect-select-all\\\" [checked]=\\\"isAllItemsSelected()\\\" [disabled]=\\\"disabled || isLimitSelectionReached()\\\" />\\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\\n      </li>\\n      <li class=\\\"filter-textbox\\\" *ngIf=\\\"(_data.length>0 || _settings.allowRemoteDataSearch) && _settings.allowSearchFilter\\\">\\n        <input type=\\\"text\\\" aria-label=\\\"multiselect-search\\\" [readOnly]=\\\"disabled\\\" [placeholder]=\\\"_settings.searchPlaceholderText\\\" [(ngModel)]=\\\"filter.text\\\" (ngModelChange)=\\\"onFilterTextChange($event)\\\">\\n      </li>\\n    </ul>\\n    <ul class=\\\"item2\\\" [style.maxHeight]=\\\"_settings.maxHeight+'px'\\\">\\n      <li *ngFor=\\\"let item of _data | multiSelectFilter:filter; let i = index;\\\" (click)=\\\"onItemClick($event,item)\\\" class=\\\"multiselect-item-checkbox\\\" [attr.title]=\\\"item.tooltip\\\">\\n        <input type=\\\"checkbox\\\" [attr.aria-label]=\\\"item.text\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"disabled || (isLimitSelectionReached() && !isSelected(item)) || item.isDisabled\\\" />\\n        <div>{{item.text}}</div>\\n      </li>\\n      <li class='no-filtered-data' *ngIf=\\\"_data.length != 0 && (_data | multiSelectFilter:filter).length == 0 && !_settings.allowRemoteDataSearch\\\">\\n        <h5>{{_settings.noFilteredDataAvailablePlaceholderText}}</h5>\\n      </li>\\n      <li class='no-data' *ngIf=\\\"_data.length == 0 && !_settings.allowRemoteDataSearch\\\">\\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\",\n        providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR],\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        styles: [\".multiselect-dropdown{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item-container{display:flex;float:left;max-width:93%}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item{border:1px solid #337ab7;margin-right:4px;margin-bottom:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item span{overflow:hidden;text-overflow:ellipsis}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret{line-height:16px;display:block;position:absolute;box-sizing:border-box;width:40px;height:38px;right:1px;top:0;padding:4px 8px;margin:0;text-decoration:none;text-align:center;cursor:pointer;transition:transform .2s}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:8px 8px 0;border-color:#999 transparent;content:\\\"\\\"}.multiselect-dropdown .dropdown-btn .dropdown-multiselect--active .dropdown-multiselect__caret{transform:rotateZ(180deg)}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox:hover{background-color:#e4e3e3}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:\\\"\\\";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:\\\"\\\";position:absolute;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:\\\"\\\";transition:transform .2s ease-out;transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}\"]\n    })\n], MultiSelectComponent);\n\nlet ClickOutsideDirective = class ClickOutsideDirective {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n        this.clickOutside = new EventEmitter();\n    }\n    onClick(event, targetElement) {\n        if (!targetElement) {\n            return;\n        }\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    }\n};\nClickOutsideDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\n__decorate([\n    Output()\n], ClickOutsideDirective.prototype, \"clickOutside\", void 0);\n__decorate([\n    HostListener('document:click', ['$event', '$event.target'])\n], ClickOutsideDirective.prototype, \"onClick\", null);\nClickOutsideDirective = __decorate([\n    Directive({\n        selector: '[clickOutside]'\n    })\n], ClickOutsideDirective);\n\nvar NgMultiSelectDropDownModule_1;\nlet NgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = class NgMultiSelectDropDownModule {\n    static forRoot() {\n        return {\n            ngModule: NgMultiSelectDropDownModule_1\n        };\n    }\n};\nNgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = __decorate([\n    NgModule({\n        imports: [CommonModule, FormsModule],\n        declarations: [MultiSelectComponent, ClickOutsideDirective, ListFilterPipe],\n        providers: [ListFilterPipe],\n        exports: [MultiSelectComponent]\n    })\n], NgMultiSelectDropDownModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MultiSelectComponent, NgMultiSelectDropDownModule, DROPDOWN_CONTROL_VALUE_ACCESSOR as Éµa, ListFilterPipe as Éµb, ClickOutsideDirective as Éµc };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}